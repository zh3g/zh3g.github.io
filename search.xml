<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>史上最全hexo多平台同步(windows+ubuntu+android)</title>
    <url>/2023/07/21/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8hexo%E5%A4%9A%E5%B9%B3%E5%8F%B0%E5%90%8C%E6%AD%A5-windows-ubuntu-android/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>说来惭愧,因为中间隔得时间有点长,导致我弄得漫不经心,但最终费九牛二虎之力最终弄好了(我一直是小白再这方面)<del>还有马上开学了</del></p>
<!-- toc -->

<ul>
<li><a href="#windows">windows</a><ul>
<li><a href="#%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B">基本流程</a></li>
<li><a href="#%E5%AE%89%E8%A3%85git-%E5%92%8Cnodejs">安装git 和node.js</a></li>
<li><a href="#%E5%AE%89%E8%A3%85hexohttpshexoiozh-cn">安装<a href="https://hexo.io/zh-cn/">hexo</a></a></li>
<li><a href="#%E7%BC%96%E8%BE%91%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2">编辑个人博客</a></li>
<li><a href="#%E6%9B%B4%E6%94%B9%E5%8D%9A%E5%AE%A2%E6%A0%B7%E5%BC%8F">更改博客样式</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">修改主题配置</a></li>
<li><a href="#%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7githubgitee%E9%9C%80%E8%A6%81%E7%83%A6%E4%BA%BA%E7%9A%84%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81%E4%BC%B0%E8%AE%A1%E8%B7%9F%E8%85%BE%E8%AE%AF%E5%AD%A6%E7%9A%84gitlab%E6%B2%A1%E7%94%A8%E8%BF%87">注册账号github&#x2F;gitee(需要烦人的实名认证,估计跟腾讯学的)&#x2F;gitlab(没用过)</a></li>
<li><a href="#%E5%B0%86%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0%E5%88%B0github%E4%B8%AD">将博客上传到github中</a></li>
<li><a href="#%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2">更新博客</a></li>
</ul>
</li>
<li><a href="#ubuntu">ubuntu</a></li>
<li><a href="#windows%E4%B8%8A%E4%BC%A0%E6%BA%90%E6%96%87%E4%BB%B6%E5%88%B0hexo%E5%88%86%E6%94%AF">windows上传源文件到hexo分支</a></li>
<li><a href="#ubuntu%E9%85%8D%E7%BD%AE">ubuntu配置:</a><ul>
<li><a href="#%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E7%9A%84%E8%BD%AF%E4%BB%B6">搭建博客需要安装的软件：</a></li>
<li><a href="#%E5%85%88%E6%9B%B4%E6%96%B0%E6%BA%90">先更新源：</a></li>
<li><a href="#node%E5%AE%89%E8%A3%85">Node安装</a></li>
<li><a href="#git%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE">Git安装及配置</a></li>
<li><a href="#%E5%AE%89%E8%A3%85hexo">安装hexo</a></li>
<li><a href="#git-bash%E5%B0%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%85%8B%E9%9A%86%E5%88%B0%E6%9C%AC%E5%9C%B0">git bash将远程仓库克隆到本地</a></li>
<li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li>
</ul>
</li>
<li><a href="#android">android</a><ul>
<li><a href="#%E5%B7%A5%E5%85%B7">工具</a></li>
<li><a href="#%E5%87%86%E5%A4%87">准备</a></li>
<li><a href="#%E9%97%AE%E9%A2%98">问题</a></li>
</ul>
</li>
<li><a href="#%E5%90%8C%E6%AD%A5%E7%BB%9F%E4%B8%80%E6%AD%A5%E9%AA%A4">同步统一步骤</a><ul>
<li><a href="#%E4%B8%8A%E4%BC%A0">上传</a></li>
<li><a href="#%E6%9B%B4%E6%96%B0">更新</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->

<p>&#96;</p>
<ul>
<li>置顶<code>top: true</code></li>
<li>是否折叠<code>&lt;!--more--&gt;</code></li>
<li>快捷键<ul>
<li>ctrl+B</li>
<li>ctrl+I</li>
<li>复制链接 选中文本后ctrl+v<br>好,进入正题</li>
</ul>
</li>
</ul>
<h1><span id="windows">windows</span></h1><p>具体参考我的博客<a href="https://zh3g.github.io/2023/07/07/%E5%9F%BA%E6%9C%AC%E6%95%99%E7%A8%8B/">《基本教程》</a></p>
<h2><span id="基本流程">基本流程</span></h2><p>包括：安装git 和 node.js<br>安装Hexo</p>
<h2><span id="安装git-和nodejs">安装git 和node.js</span></h2><p>1 打开<a href="https://git-scm.com/">git官网</a>点击download进行下载 选择电脑对应的版本<img src="https://imgse.com/i/pCbfe2V" alt="Alt text"><br>2 直接下一步即可,也可以更改安装目录<br>3 安装完后在桌面或文件夹右键出现git bash即可<br>4 安装nodejs 打开官网点击下载<img src="https://imgse.com/i/pCbfZ80" alt="Alt text"><br>5 同样下一步即可<br>6 判断安装是否成功:打开cmd 输入<code>node -v</code>出现版本号代表安装成功</p>
<h2><span id="安装hexo">安装</span></h2><p>1 在本地新建一个文件夹用于安装博客的文件夹<br>2 进入文件夹右键点击GBH 打开一个git 窗口<br>3 将hexo官网的代码依次复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>4 <code>hexo sever&lt;=&gt;hexo s ; hexo generate&lt;=&gt;hexo g; hexo deploy &lt;=&gt;hexo d(hexo三件套 hexo clean; hexo g ;hexo d)</code><br>5 复制地址<code>http://localhost:4000</code>注意复制是别用ctrl+c会终止服务,可以右键复制粘贴 或shift+insert</p>
<h2><span id="编辑个人博客">编辑个人博客</span></h2><p>1 同样在gbh中输入<code>hexo new post &quot;文章名字&quot;</code>或<code>hexo new &quot;文章名字&quot;</code>即可创建第一篇文章(在source_posts里的能看到) 用的是<a href="https://markdown.com.cn/basic-syntax/">markdown</a>(轻量级标记语言)编辑的<br>保存后 退出<br>2 运行 <code>hexo g</code>生成网页<code>hexo s</code>运行博客<br>3 打开博客就可以看见文章了</p>
<h2><span id="更改博客样式">更改博客样式</span></h2><p>即:添加第三方主题:如butterfly ayer next…<br>1 打开<a href="https://hexo.io/zh-cn/">hexo</a> 点击探索主题<br>2 以ayer主题为例 进行进一步安装….(省略之后再补)<br>3 实质按照主题说明 在hexo根目录 gbh上敲代码即可成功<br>4 在根目录的config 文件中(不特殊说明都是根目录的config)将</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">landscape</span></span><br></pre></td></tr></table></figure>

<p>替换为</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">ayer</span></span><br></pre></td></tr></table></figure>
<p>(注意yml文件一般:后都有空格!)<br>保存退出<br>5 git窗口中输入hexo g 输入hexo s<br>点击<code>http://localhost:4000/</code>进行本地访问</p>
<h2><span id="修改主题配置">修改主题配置</span></h2><p>根据每个主题的配置指南<br>1 在themes文件夹下修改config文件 改成你喜欢的字即可(提醒:最好在改之前复制一份防止改错,对)<br>2 还可以修改config文件 同理<br>3 修改完后 用hexo clean hexo g hexo s</p>
<h2><span id="注册账号githubx2fgitee需要烦人的实名认证估计跟腾讯学的x2fgitlab没用过">注册账号github&#x2F;gitee(需要烦人的实名认证,估计跟腾讯学的)&#x2F;gitlab(没用过)</span></h2><p>太简单不教了<br>以github为例<br>1 新建仓库 名字一定设为xxx.github.io其他不用管直接默认即可</p>
<h2><span id="将博客上传到github中">将博客上传到github中</span></h2><p>1 按照github官方提示进行设置即可例如</p>
<pre><code>git config --global user.name &quot;xxx&quot;
git config --global user.email &quot;xxx@xxx.com&quot;

ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;
(输入三次回车

cat ~/.ssh/id_rsa.pub
</code></pre>
<p>复制显示的密钥到ssh公钥(github的个人设置中的 添加即可)</p>
<pre><code>ssh -T git@github.com
</code></pre>
<p> 用来验证  返回successfully代表成功<br> 找到config文件<br> 最后输入<br>例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repository: git@github.com:xxx/xxx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>最后打开github仓库的settings里的pages等到有这样的标识是代表可以访问<img src="https://imgse.com/i/pCbfVCq" alt="Alt text"></p>
<h2><span id="更新博客">更新博客</span></h2><p>每次先写时:<code>hexo new post &quot;文章&quot;</code><br>写完后:三件套<br>这里给一个我写的bat程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Echo start cmd /c <span class="string">&quot;hexo clean&amp;&amp;hexo g&amp;&amp;hexo d &quot;</span>   </span><br><span class="line"></span><br><span class="line">@Echo Off</span><br></pre></td></tr></table></figure>

<p>!终于结束了<br>更多博客部署问题可以在博客中关于我中私信我,或者参考<a href="https://www.bilibili.com/video/BV1ts4y1f7Gu/?spm_id_from=333.337.search-card.all.click">视频</a></p>
<h1><span id="ubuntu">ubuntu</span></h1><p>这里是通过新建一个分支来保存博客源文件的(因为github上的master分支只有部分文件所以不能利用这个同步)</p>
<h1><span id="windows上传源文件到hexo分支">windows上传源文件到hexo分支</span></h1><p>参考1.<a href="https://blog.csdn.net/qq_30105599/article/details/118302086?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168994957916800211581424%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168994957916800211581424&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-118302086-null-null.142%5Ev90%5Ekoosearch_v1,239%5Ev3%5Einsert_chatgpt&utm_term=hexo%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E6%80%8E%E4%B9%88%E5%90%8C%E6%AD%A5&spm=1018.2226.3001.4187">多台电脑同步更新Hexo博客</a></p>
<h1><span id="ubuntu配置">ubuntu配置:</span></h1><h2><span id="搭建博客需要安装的软件">搭建博客需要安装的软件：</span></h2><p>git<br>node.js<br>hexo</p>
<h2><span id="先更新源">先更新源：</span></h2><p>获得源上的软件包列表信息<br><code>sudo apt-get update</code><br>更新本地软件<br><code>sudo apt-get upgrade</code></p>
<h2><span id="node安装">Node安装</span></h2><p>命令行安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt install npm</span><br></pre></td></tr></table></figure>

<p>查看nodejs工具是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nodejs -v</span><br><span class="line">v8.10.0</span><br></pre></td></tr></table></figure>

<h2><span id="git安装及配置">Git安装及配置</span></h2><p>1 安装Git<br>使用命令安装Git工具：</p>
<p><code>sudo apt install git</code><br>查看是否安装成功：</p>
<p><code>git --version</code><br><code>git version 2.17.1</code></p>
<ol start="4">
<li>Hexo安装及配置<br>先创建一个hexo操作的文件目录</li>
</ol>
<h2><span id="安装hexo">安装hexo</span></h2><p><code>npm install hexo-cli -g</code><br><code>npm install hexo -g</code><br>检查hexo是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Linux 5.3.0-45-generic linux x64</span><br><span class="line">http_parser: 2.7.1</span><br><span class="line">node: 8.10.0</span><br><span class="line">v8: 6.2.414.50</span><br><span class="line">uv: 1.18.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.14.0</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.30.0</span><br><span class="line">openssl: 1.0.2n</span><br><span class="line">icu: 60.2</span><br><span class="line">unicode: 10.0</span><br><span class="line">cldr: 32.0.1</span><br><span class="line">tz: 2017c</span><br></pre></td></tr></table></figure>
<h2><span id="git-bash将远程仓库克隆到本地">git bash将远程仓库克隆到本地</span></h2><p><code>git clone 仓库地址</code><br>然后进入项目目录，安装依赖启动博客服务器，生成静态文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>执行以上指令后，便可以在浏览器通过<a href="http://localhost:4000/%E8%AE%BF%E9%97%AE%E5%8D%9A%E5%AE%A2">http://localhost:4000/访问博客</a></p>
<p>另一台电脑发布文章</p>
<p>同之前的教程一样，写好文章后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<p>两台电脑同步写博客<br>我们的博客仓库有两个分支，master分支和hexo分支</p>
<p>其中，master分支用于存放Hexo生成的静态资源文件，hexo分支用于存放网站的原始文件</p>
<p>所以，我们在一台设备上写好一篇文章或进行了博客的修改后</p>
<p>执行以下命令，将master中的静态资源文件更新</p>
<p>在博客目录下的cmd中</p>
<p><code>hexo clean</code><br><code>hexo d -g</code></p>
<p>执行以下命令，将hexo中的网站原始文件更新</p>
<p>在博客目录下的git bash中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;描述&quot;</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>


<p>大功告成！</p>
<h2><span id="注意事项">注意事项</span></h2><p>每次有新的操作的时候，别忘了在另一台电脑上更新</p>
<p><code>git pull hexo</code></p>
<h1><span id="android">android</span></h1><p>因为android能够调用底层的linux命令故可以用于搭建hexo</p>
<h2><span id="工具">工具</span></h2><p>termux <a href="https://www.coolapk.com/apk/bin.mt.plus">MT管理器</a>(酷安下载)</p>
<h2><span id="准备">准备</span></h2><p>1 termux下载<br><a href="https://lanlan2017.github.io/blog/4a95e633/">termux 搭建hexo博客教程</a><br>我这里进行补充:<br>1 在下载好node.js和git后<br>直接git clone 源代码<br>接着<code>npm install hexo-deployer-git --save</code><br>一定要输</p>
<p>2 获取ssh秘钥<br><code>git config --global user.name &quot;xxx&quot;</code><br><code>git config --global user.email &quot;xxx@xxx.com&quot;</code><br>最好用tsu下进行<br><code>ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</code><br>(输入三次回车<br>找到文件.pub打开复制ssh秘钥<br>再去github添加<br>3 验证<code>ssh -T git@github.com</code><br>4 进行三件套<br>如果安装插件,就重新安装一遍即可</p>
<h2><span id="问题">问题</span></h2><p>1 非tsu用户下live2d里面的package.json显示权限不够<br>我先是用chmod改权限为777,发现不行后<br>安装tsu<br>执行<code>npm install hexo-deployer-git --save</code><br>在运行正常<br>2 会显示node_modules文件出错,把正常npm复制替换后依然出错所以无法解决,可能是手机termux问题</p>
<h1><span id="同步统一步骤">同步统一步骤</span></h1><h2><span id="上传">上传</span></h2><p>执行以下命令，将hexo中的网站原始文件更新</p>
<p>在博客目录下的git bash中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull</span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;描述&quot;</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>


<h2><span id="更新">更新</span></h2><p>每次有新的操作的时候，别忘了在另一台电脑上更新</p>
<p><code>git pull hexo</code></p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>chatgpt</title>
    <url>/2023/07/12/chatgpt/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>今天闲来无事,弄了一点new bing和gpt之类的<br>chrome的new bing<br>插件<a href="https://chrome.google.com/webstore/detail/new-bing-anywhere/hceobhjokpdbogjkplmfjeomkeckkngi">New Bing Anywhere</a><br>前提:魔法 Microsoft账户,等等</p>
<blockquote>
<p>参考<a href="https://mp.weixin.qq.com/s/h3gBBohvbv2CQ4fCTjHbPA">知识星球</a><br>原文:<br>总结|体验或使用【GPT3.5】【GPT4】的工具清单<br>持续更新至:2023年5月28日所有网址请添加https:&#x2F;&#x2F;</p>
</blockquote>
<!--ShowMeAI社区总结的经典测试3问，可以快速判断模型水平:3个问题!验明GPT-4真身;基于GPT的科研加速技巧汇总;Midjourney神仙教程;印象笔记A....-->

<ul>
<li><strong>不需要魔法</strong></li>
</ul>
<h1><span id="wwwhayocom-图1"> 【图1】</span></h1><ul>
<li>Windowsios Android-模型:GPT3.5&#x2F;ChatGLM-6B等-说明:每天50次免费限制<br>slack.com&#x2F;intl&#x2F;zh-cn&#x2F;【图2】- Windowsios Android</li>
<li>模型:克劳德、Notion等</li>
<li>说明:使用outlook邮箱，需要自己添加模型到Slack，近期添加的克劳德可能无法使用【输入后没反应】</li>
</ul>
<h1><span id="wwwsciradarcomchat图3-web微信公众号">(图3】- web微信公众号</span></h1><ul>
<li>模型:GPT3.5</li>
<li>说明:每天免费10000字符，每条输入文字上限2000字符</li>
</ul>
<h1><span id="githubcomx2fnomic-aix2fgpt4all-图4">github.com&#x2F;nomic-ai&#x2F;gpt4all (图4】</span></h1><ul>
<li><p>Mac&#x2F;Osx Windows Ubuntu-模型:在CPU上本地运行的开源大型语言模型</p>
</li>
<li><p>中文教程:<br>mp.weixin.qq.com&#x2F;s&#x2F;UbHfM2PbQCfpRf5dOmOS1g</p>
</li>
<li><p>需要魔法</p>
</li>
</ul>
<h1><span id="wwwbingcom-a图5-web-ios-andriod-模型gpt4"> 【a图5】- web iOs Andriod-模型:GPT4</span></h1><ul>
<li>说明:基于GPT4但是功能做了收束，免费，每轮对话不超过20个问题，每天不超过200个问题</li>
</ul>
<h1><span id="poecom-图6">poe.com (图6】</span></h1><ul>
<li>Webios Andriod</li>
<li>模型:GPT4&#x2F;克劳德+，克劳德&#x2F;聊天GPT&#x2F;   Dragonfly<br>–说明:GPT4每天免费1次，克劳德+每天免费3次，其他免费;安卓客户端可能会出现闪退</li>
</ul>
<h1><span id="wwwperplexityai-a图7"> 【a图7)</span></h1><ul>
<li>web iosAndriod(可以申请waitlist)</li>
<li>模型:基于GPT3</li>
<li>说明:主打准确度，胡说八道概率低，体验优于聊天GPT，免费，非常推荐</li>
</ul>
<h1><span id="bardgooglecom-k-图8-web">bard.google.com K 图8】- web</span></h1><ul>
<li>模型:PaLM 2</li>
<li>说明:不支持中文，但是实时联网，搜索体验和流畅度都不错~</li>
<li>补充:中英文翻译的脚本greasyfork.org&#x2F;en&#x2F;scripts&#x2F;466992-google-bard-%E4%B8%AD%E6%96%87%E7%BF%BB%E8%AF%91%E8%8B%B1%E6%96%87%E8%84%9A%E6%9C%AC<br>国内大模型</li>
</ul>
<h1><span id="讯飞星火大模型a图9-申请内测-xinghuoxfyuncnx2f">讯飞·星火大模型(a图9】-申请内测: xinghuo.xfyun.cn&#x2F;</span></h1><ul>
<li>社区测评:【科大讯飞|星火认知大模型】火线内测＋申请窍门儿</li>
</ul>
<h1><span id="百度文心一言">百度·文心一言</span></h1><ul>
<li>申请内测: yiyan.baidu.com&#x2F;</li>
</ul>
<h1><span id="阿里通义千问">阿里·通义千问</span></h1><ul>
<li>申请内测: tongyi.aliyun.com&#x2F;</li>
</ul>
<h1><span id="昆仑万维天工">昆仑万维·天工</span></h1><ul>
<li>申请内测: tiangong.kunlun.com&#x2F;</li>
<li>社区测评: 【昆仑万维|天工】大模型测试初评</li>
</ul>
<h1><span id="商汤日日新api">商汤·日日新(API)</span></h1><ul>
<li>申请内测: techday.sensetime.com&#x2F;</li>
</ul>
<h1><span id="360智脑">360智脑</span></h1><ul>
<li>申请内测: <a href="http://www.so.com/zt/invite.htm1#/">www.so.com/zt/invite.htm1#/</a></li>
</ul>
<h1><span id="免费体验gpt4">免费体验GPT4</span></h1><p>ora.sh&#x2F;openai&#x2F;gpt4<br>-说明:GPT4每天免费10次;据社区大佬测试，出答案速度不太稳定，时快时慢<br>chat.forefront.ai&#x2F;<br>-说明:GPT4，限制每3小时不能超过5条消息</p>
<h1><span id="steamshipcom">steamship.com</span></h1><ul>
<li>说明:需要注册;先在顶栏点击GPT4 Plugin，然后在新的页面里点击创建一个新的实例，按需要填充即可。注意! max_token推荐默认选项</li>
</ul>
<hr>
<h2><span id="大模型体验排名主观排名">大模型体验排名（主观排名)</span></h2><h3><span id="聊天gptplusgt克劳德gtperplexitygt聊天gptgt新必应gt克劳德gt通义千问序列猴子gt文心一言bard">聊天GPTPLUS&gt;克劳德+&gt;Perplexity&gt;聊天GPT&gt;新必应&gt;克劳德&gt;通义千问≥序列猴子&gt;文心一言≥Bard</span></h3><p>补充:<br>测试问题1：What yesterday’s today is tomorrow’s (昨天的当天是明天的什么)</p>
<blockquote>
<p>GPT-3.5回复：Yesterday (昨天)</p>
<p>GPT-4回复：Past (前天)</p>
<p>测试工具：Poe (<a href="https://poe.com/">https://poe.com/</a>)</p>
</blockquote>
<p>测试问题2：There are 9 birds in the tree, the hunter shoots one, how many birds are left in the tree (树上9只鸟，打掉1只，还剩几只)</p>
<blockquote>
<p>GPT-3.5回复：8只</p>
<p>GPT-4回复：0只，其他被吓跑了</p>
<p>测试工具：NewBing(<a href="https://www.bing.com/">https://www.bing.com/</a>)</p>
</blockquote>
<p>测试问题3：Why did Zhou Shuren beat up Lu Xun (鲁迅为什么暴打周树人)</p>
<blockquote>
<p>GPT-3.5回复：稀奇古怪的乱编理由</p>
<p>GPT-4回复：鲁迅和周树人是同一个人</p>
<p>测试工具：OpenPlayground (<a href="https://nat.dev/">https://nat.dev/</a>)</p>
</blockquote>
<p>魔法教程:</p>
<h1><span id="windows">windows</span></h1><ul>
<li>安装V2ray或clash花钱或找免费的节点与订阅<br>教程<a href="https://github.com/freefq/free">freefq&#x2F;free</a><br>(bulink.xyz注册（要翻墙）除可订阅本页免费节点，还有每月5G自建节点免费流量，不用打卡签到长期有效，欢迎体验<br>新开bulink镜像站burstlinker.com（不需要翻墙）)</li>
<li>直接安装翻墙浏览器 <a href="https://github.com/Alvin9999/new-pac">Alvin9999&#x2F;new-pac</a>  ps:有一丁点限制,自行破解</li>
<li>第三方vpn(免费or付费)</li>
</ul>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>git入门</title>
    <url>/2023/07/10/git%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote>
<p>选自bilibili <a href="https://www.bilibili.com/video/BV1pX4y1S7Dq/?spm_id_from=333.337.search-card.all.click">30分钟弄懂所有工作Git必备操作 &#x2F; Git 入门教程</a></p>
</blockquote>
<h1><span id="git是什么">git是什么</span></h1><p>免费开源的分布式版本控制系统<br>版本管理<br>分布式 集中式svn<br>方面大家以后工作<br>github gitlab gitee区别<br>安装git<br>官网下载<br>[Windows和mac有区别]<br>(windows:右键打开gbh<br>mac直接打开终端窗口)<br>基础配置<br>$ git config –global user.name”your name”<br>$ git config –global user.email “your email”<br>(只是说明行的)<br>创建仓库:<br>去项目的文件夹输入<br>$ git init<br>(不需要联网)<br>用 git clone去克隆一个网络上的项目<br>例如: git clone <a href="https://github.com/torvalds/linux.git">https://github.com/torvalds/linux.git</a><br>(为所欲为)</p>
<p>创建完仓库后,每一个文件都有一个状态<br>git init<br>新建 状态:未跟踪<br>单独跟踪一个文件<br>$ git add <name><br>删除:$ git rm <name> 或者用$ git rm –cache <name>(保留在目录里但不被跟踪)<br>修改<br>接下来用 git add <file-name>设置成缓存状态<br>假如<em>手滑</em> 不想把它设置成缓存状态用 git reset HEAD <name>来取消它的缓存状态<br>用 git commit命令来提交此次修改<br>一个文件的四个状态<br><img src="/2023/07/10/git%E5%85%A5%E9%97%A8/image1.png" alt="Alt text"><br>补充:git commit<br>输入git commit 然后回车<br>终端自动跳到编辑器里(应该是vim)</name></file-name></name></name></name></p>
<ul>
<li><ul>
<li>按i键输入模式</li>
<li>编辑完成后按 ESC和:wq键保存并退出<br>版本提交完成<br>-或者按git commit -m “本次修改的大致内容”<br>接着按回车</li>
</ul>
</li>
</ul>
<h2><span id="突然不想提交怎么办用git-reset-head~-soft来取消我们这次的提交但第一次提交撤销不了第二三次可以如何查看文件章台用git-status查看红色是修改但没暂存绿色是已暂存但没提交查询命令更细致git-diff查询之前历史的提交-git-logcommit后面的乱码是之前提交的哈希值接下来是提交作者提交时间还有我们提交时输入的一些信息git-log-pretty美化输出git-log-prettyx3doneline把每一次提交的信息都变成一行或自定义一个格式-git-log-prettyx3dformath-anarsh-简化哈希an-作者名字ar-修订日期距今ad-修订日期s-提交说明当然除了这样一条一条上传信息还可以用git-log-graph来以图形化的方式去呈现主要表现为分支gt这是本地">突然不想提交怎么办用git reset head~ –soft来取消我们这次的提交(但第一次提交撤销不了,第二三次可以)<br>如何查看文件章台<br>用git status查看<br>红色是修改但没暂存,绿色是已暂存但没提交<br>查询命令(更细致)git diff<br>查询之前历史的提交 git log(commit后面的乱码是之前提交的哈希值接下来是提交作者,提交时间还有我们提交时输入的一些信息)<br>git log –pretty美化输出<br>git log –pretty&#x3D;oneline(把每一次提交的信息都变成一行)<br>或自定义一个格式 $ git log –pretty&#x3D;format:”%h-%an,%ar:%s”<br>(%h 简化哈希<br>%an 作者名字<br>%ar 修订日期(距今)<br>%ad 修订日期<br>%s 提交说明)<br>当然除了这样一条一条上传信息<br>还可以用git log –graph来以图形化的方式去呈现(主要表现为分支)–&gt;这是本地</span></h2><p>远程仓库的一些使用:<br>代码托管平台:以github为例<br>右上角new repository<br>给原始仓库起名 公开 初始化</p>
<ul>
<li>用https来复制一下这个远程仓库的链接<br>切换回本地<br>用git remote add 的命令来链接我们远程的一个仓库(一般名字叫origin)<br>git remote add origin +https的链接<br>可以git remote看一下(当出现origin是说明添加好了)<br>输错怎么办可以用git remote rename&lt;原名&gt;&lt;改之后名字&gt; 这个命令来重命名<br>将本地代码推送之远程的仓库:用git push &lt;一个远程仓库比如书origin&gt; master<br>把本地的master分支推送过去<br>然后输入我们的用户名 密码(但有问题?)<br>回到github页面点击setting看到最后the developer settings然后点击personal access tokens<br>现在我们需要新建一个令牌去当我们的密码然后我们生成一个普通的经典的就可以<br>name 有效期 打开有关仓库的权限 点击生成<br>再次push一下用户名不变密码填我们复制的一个token<br>success</li>
<li>比较简单的方式通过ssh协议去健全<br>首先用~&#x2F; .sh进入目录<br>进去后我们可以通过ssh-keygen去生成一个ssh秘钥通过-t选择一个生成的算法比如用rsa 用-b选择一个生成的大小比如4096 然后通过-C添加的一个评论(github推荐个人的邮箱理论上想写啥就写啥)<br>回车 可以看到他让我们起一下这个秘钥的名字(咱就起一个test) 接下俩然我们输入密码:(可以不填)<br>ls看一下里面的文件 test私钥 test.pub为公钥<br>看一下公钥用cat test.pub将公钥复制下来<br>来到github的setting界面 然后选择ssh keys<br>添加一个秘钥 把我们刚才复制的test.pub复制过来可以起一个名字<br>回到我们之前的那个项目然后选择clone点击ssh复制一下<br>接下来回到我们的测试目录(这个目录是空的)我们来克隆一下我们刚才复制过来的ssh 用git clone &lt;你的ssh&gt;</li>
</ul>
<blockquote>
<p>有关分支的概念:<br>其实每次提交生成新版本是都会生成一个提交对象,每一个提交对象都有一个独一无二的哈希值,其实分支就是一个包含这个哈希值的一个文件,我们也可以简单理解为指向一个提交对象的指针,也就是说我们可以子啊一个提交对象上新建多个分支,因为分支是包含这个提交对象哈希值的一个文件.所以我想加多少就加多少,对不对<br>其实当我们最开始初始化本地仓库时就已经新建了一个master分支,我们每次提交操作都是在这个master分支上进行的<br>当我每次进行一个提交的时候我们的分支也跟着我们的提交对象一起进行向前的移动<br><img src="/2023/07/10/git%E5%85%A5%E9%97%A8/image2.png" alt="Alt text"><br>那我新建那么多分支干嘛?&lt;<del>一个分支不好吗</del><br>介绍经典的git流模型<br><img src="/2023/07/10/git%E5%85%A5%E9%97%A8/image3.png" alt="Alt text"><br>如何操作分支?<br>操作分支之前首先知道我们在哪个分支上</p>
</blockquote>
<ul>
<li>zsh在前面就能看到你的分支</li>
<li>通过git log (开括号里就是我们的分支)(origin&#x2F;master的意思:之前添加的远程仓库然后这个远程仓库里也有个master这个origin&#x2F;master其实就代表表我们远程仓库的master分支)<br>head其实戴白我们现在所处的分支</li>
<li>还可用git status –&gt;on branch master 就代表我们现在的master分支</li>
<li>或者我们可以通过git branch –list</li>
</ul>
<p>怎么创建分支呢<br>可以用 git branch &lt;比喻说feature1&gt;<br>我们git branch –list</p>
<p>怎么切换分支呢?<br>可以通过:git take out feature1(查看分支 git a branch list)<br>用 vi来修改我们的代码(i键进入插入模式:按esc键然后:wq退出)</p>
<ul>
<li>我们可以提交一下 git add test file</li>
<li>我们也可以用git commit -a直接把没有暂存的文件也提交了再加一个-m(或简写-am) “feature1”</li>
</ul>
<p>用git log查看 用git log –pretty&#x3D;one line<br>清一下屏 切换到master分支<br>我们可以新建一个feature2分支</p>
<ul>
<li>用git branch feature2,再切换回master</li>
<li>或者git checkout -b feature2</li>
</ul>
<h2><span id="用vi编辑器修改text-file-文件编辑好后再提交一下用git-commit-am-festure2-如果我们想看到所有分支的提交可以用git-log-all-也可以用grabegit-log-all-graph接下来我们再切换回master分支那么到目前为止我们新建分支和切换分支讲的都差不多了">用vi编辑器修改text file 文件<br>编辑好后再提交一下用git commit -am “festure2”<br>- 如果我们想看到所有分支的提交可以用git log –all<br>- 也可以用grabe:git log –all graph<br>接下来我们再切换回master分支<br>那么到目前为止我们新建分支和切换分支讲的都差不多了</span></h2><h1><span id="重头戏">重头戏</span></h1><p>如何来合并分支<br>例如:让master分支跟feature one合并<br>(现在是master分支)git merge feature1<br>查看我们的文件:cat test_file<br>查看:git log –all –graph<br>继续合并:git merge feature2(但出现了conflict因为feature1和feature2我们修改了同样的地方)–需要自己解决冲突<br>看看哪有冲突git status:都修改了test_file文件<br>解决办法:直接进到我们text_file文件:vi text_file<br>&#x3D;&#x3D;上面是</p>
]]></content>
      <categories>
        <category>个人提升</category>
      </categories>
      <tags>
        <tag>日常学习</tag>
      </tags>
  </entry>
  <entry>
    <title>实用教程</title>
    <url>/2023/07/09/%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1><span id="教程推荐不分先后">教程推荐(不分先后)</span></h1><!-- toc -->



<!-- tocstop -->

<p><del>抓紧学习</del>!<br><img src="/2023/07/09/%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/image.png" alt="学习"></p>
<ul>
<li><p><a href="https://blog.csdn.net/fayoung3568/article/details/119488325">上传文件到gitee仓库的步骤</a><br><img src="/2023/07/09/%E5%AE%9E%E7%94%A8%E6%95%99%E7%A8%8B/image2.png" alt="gitee"><br><a href="https://gitee.com/zh3g/git/raw/master/%E9%82%AE%E7%AE%B1.xlsx">邮箱文件下载</a></p>
<ul>
<li>几部曲<del>不会数数</del><ul>
<li><code>git add .</code>(如果想要添加个别文件可以把”.”替换为相应文件名。)</li>
<li><code>git commit -m &quot;注释&quot;</code></li>
<li><code>git remote add origin</code> <a href="https://gitee.com/zh3g/git">https://gitee.com/zh3g/git</a> (不知道是否每次都用) </li>
<li><code>git pull --rebase origin master</code>(如果远程仓库为空可以跳过这一步，如果远程仓库不为空，则必须进行这一步，否则会报错。)</li>
<li>git push -u origin master</li>
</ul>
</li>
<li>上传文件示例<ul>
<li><del><img src="https://gitee.com/zh3g/git/raw/master/001.png" alt="在线图片"> 没用</del></li>
</ul>
</li>
</ul>
</li>
<li><p>插件市场</p>
<ul>
<li>hexo <a href="https://hexo.io/plugins/">插件市场</a></li>
<li><a href="https://easyhexo.com/2-Theme-use-and-config/2-19-hexo-theme-ayer/#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">主题</a></li>
</ul>
</li>
<li><p>图床</p>
<ul>
<li><a href="https://www.superbed.cn/">聚合图床</a> <del>可惜我没用</del></li>
<li><a href="https://www.cuplayer.com/cloud/">酷播云</a> (视频,音乐&lt;但有一点点限制&gt;</li>
<li><a href="https://imgchr.com/i/Vne6w4">路过图床</a><span id="more"></span>
<ul>
<li>unhealthy <a href="https://imgse.com/i/pCgBKQs"><img src="https://s1.ax1x.com/2023/07/08/pCgBKQs.jpg" alt="pCgBKQs.jpg"></a></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://zhuanlan.zhihu.com/p/490143994">免费文件存储分享网站合集 - 知乎</a></p>
</li>
</ul>
<!--- 来小亮,给大伙整个活(live2d进阶)
     - 进阶:[Hexo博客优化：在Next主题中设置进阶版Live2D看板娘](https://blog.csdn.net/qq_39610915/article/details/90679768)
-->
<ul>
<li><p>hexo 跳过文件渲染</p>
<ul>
<li>起因:谷歌要求主页必须有html文件的链接才行</li>
<li>我不会弄(但我新建了一个html的文件节里面的index.md改为index.html并且内容改为html内容)</li>
<li><del>我真是太机智了</del>于是乎我渲染出来接我是不行</li>
<li>参考文章 跳过了css渲染(success) <ul>
<li><a href="https://blog.csdn.net/weixin_58068682/article/details/116611715">Hexo博客技巧：添加自定义html页面</a></li>
<li><a href="http://qtdebug.com/hexo-skip-render/#:~:text=Hexo.%20Hexo%20%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%89%80%E8%A7%81%E6%96%87%E7%AB%A0%E9%83%BD%E6%98%AF%E7%BB%8F%E7%94%B1%E6%B8%B2%E6%9F%93%E7%9A%84%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%EF%BC%8C%E8%80%8C%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E7%9A%84%E6%A0%B7%E5%BC%8F%E9%83%BD%E7%9B%B4%E6%8E%A5%E7%94%B1%20Hexo%20%E7%9A%84%E4%B8%BB%E9%A2%98%E6%8E%A7%E5%88%B6%EF%BC%8C%E6%89%80%E4%BB%A5%20Hexo%20%E5%8D%9A%E5%AE%A2%E5%A4%A7%E9%83%A8%E5%88%86%E9%83%BD%E5%91%88%E7%8E%B0%E5%87%BA%E4%B8%80%E7%A7%8D%E9%AB%98%E5%BA%A6%E7%9A%84%E7%BB%9F%E4%B8%80%E5%8C%96%E4%B8%8E%E8%A7%84%E8%8C%83%E5%8C%96%E3%80%82.%20%E4%B8%8D%E8%BF%87,%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%20%E3%80%82.%20%E5%A6%82%E6%9E%9C%E8%A6%81%E5%BF%BD%E7%95%A5%20source%20%E4%B8%8B%E7%9A%84%20test%20%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%BF%99%E6%A0%B7%E9%85%8D%E7%BD%AE%EF%BC%9A.%201.">hexo跳过渲染</a></li>
</ul>
</li>
<li><del>结果:没验证成功</del></li>
<li>最简单的方法是将html复制到source文件夹(在跳过css渲染) over</li>
<li>主题作者方法:在 head.ejs 里添加 html 标签<br>         <u>(后悔没早点看到)</u></li>
</ul>
</li>
<li><p><a href="https://blog.csdn.net/zgcr654321/article/details/86738005">使用Gitlab pages自动部署hexo博客</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>bilibili嵌入视频</title>
    <url>/2023/07/07/bilibili%E5%B5%8C%E5%85%A5%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3ec17eaffa2b7227a8663edec6a537ee702efd4ed8c8e10be11f9c8ca9703245">0fccd7f6df5c90b5412c12ff50aec4d3d780ea6cfa703f92841b8637dcb936f809cb0a012bc19d24d8cd17591beac60dfe6a2ddc6c723bfb0a702cd655da391c515846d6a2a8b1cf60676ca892bce9a516d102dc852fa38759690e1b977136fa418a1d2837532274e73b9f215f1dcca8b4b14194c922bbddaef0641cd50288e9e6f0be0a6018dad0090b97b58b2136c25aa9714c267c86b8c66e151bf1ae12c466932349e6c7a78a4fb01ef7d6f9bce0abe4bbead884c23f22698836ba7f551ab81bf55c7e4ddc445311a1ad44aaa51220f2fdd72cfb1663735d7bb33bf58231d702847448f23e32f1107c892d93a2d5e550c31ace622f48853a20cf20d673323534e35e2e2dcf120c84cca1a91d1d16c61e1abc30fd90804fa1495571b8b0b27a9d80077164ba216f5ce8f408d34cf7cb4b4ab663f227d5c72dae2d902bd44fe9d75a5ddb9c78ad52a57cfccf4d336a69387e36fd293dceaf6c73104353195398d19d24ee480a9730a94d470e99140ab887449b3b93f63148e089610cbcdebb370a0860d714c0fb734ff6f13cc3c9cae7fde8714f7cc56d615effbc3ea70e5f47591cb057040f9c9c93671f5dbd134a304515fdcaf4e4f0d1d24d09bc62682f4454d92fe8e7de211580ad6af4ca0923ede93676377f753d945366832dce755fce0eb0840ef2cfa565c604314e8f2ad1799f4c6cfd76ae1f90d68829bfff7744626e8a3b836a4fa8bcb33ced46893a50d0ff1a44578e49ce6bef080a46b6fac2554dd417d781a55d787a6bcab1adef9086ab6ba2526fa5bc306a18f44fb74362c92d11dabcb883b375322fdb2a205859c1d109529d709256f9143bd5d5d374bf7e92735f9bfffcd5c6fc4024cf58a64bb4d5f16d6f1efbf826ba5cd45d8eac13c25969aa8c9a308390824680fc734f1bd20dffe745fece2ae57d1382e98be21d5357d244d694edae10992bd8a15d3bd8602ae8785a8c8c992b2904e073c3f0227105a21ce7a935553808685c9ae1fa1e1454a23e1270b694368dd2bb175d0650e58744dc962ca4dd4a5112c7062b923e7c0f5689b6f73b8bfdccbcf748eba3804972aae4f924807f4cdb340bfa3ebe48eca8b8a99686a8048b1e116710944b9073262cdfc77b3678c49f595697c96e014e3930f14d1c18afa9908a1ebd31ad93bb3e8f76bff66c6ae821406d276efe8f8a4ccb335ce8faad42fe3a164fb72c85b22505a376f9e9bb093bfb947145858fbc8b83ec0512d2f918f217810108e8796f0236ec2c583608c7080c7bebeb9ddbf53fd8b08cdf399d2458d81661ddf780bc4c5607da37bc11b18f12873ba9f592e337934b59b0bac21c88b81ea72cf4cd71e1c6e815081891bb555445a95bb930074f0e60b9b6de294ff6c0c91357f992505be0e8077341feecadedd696b721b47673dda41a468039e6e6b148c3b872e8541e22c3df4f155da6dcc3f651dd7ae023fa49e3575ba96238435feaae31af1729d6f4a62ce4078b4844c1e7946cd93bf1ed655f133c8858e9ad8f714255c10d15ea5a9705456c6ef109c9d7859e2e8dc0d6d4d93b6a6c0d7b2720b41eec40614a16df0e6e5d06159290312e45a0a71c410bbf23870e87269d865d86a1b623ade7d5bdfa37d5cf18295d14cd19c5ddfe58635487d35f5a493c8a9c7453e87b455dacae525329cdadb936450b1edae88c6cd28c1708fc662c76985fa44a05cfedfb8c643c5fbf215555b1f8f6f0fc6365fb92321faf0d36880a1bdd0edcd3db82e6c376bee114d2796c24d92499eb4e9ab39d76a49ae65962f56cd75b1db05bf5c6bf25478d5fe89a6f6e64ed50bf3e781d541470d07c5ab2b73b5df359009ff6d1908f09045f0bba4de1ef0fb847bd3bac29ffe53982f49857b831680b9c89b00a419a4db70af553a5722d2c8cb27fce9f46f55744d96fa061e9de264a57996fd87c5e4937877ca4af23ac51d435f51bb257b610c6d8533f30bbb935266d157ce903460372df496544c44cc50effcc342fabd497fd375db476b5aa66419a1d0c08899b762d8a0c8e2c40e8951c67de0ca5e16f3471d4c289958d2319477a6518345cc2fb29c4de75f12c92ea6539810248fcba9d469981f3b17c6e3d3202613902fb9c6809ad67187d9835d32130857dd1fba498e66659db9100c54f00ea3ae84bc6d9616ef0d4dd07c63eb0940d8a32e23808bbf814df3c0d805b139ca45b3013f94dd457b7052364e6e331741df53c51cabf52086732804e3c3f2d84c08abf4ec25762291bb8b6524f6fe1887b19f0bae26494ba3f17b5af50eb427c6fa7784110e96882a2600d1e23082972791248703b67733363417b0b52ffb68e910fc622408f867ad6aabe70c5a9276fe1137c16b254e37eeccea5cd9492e79a9fece873b21207e3d69d4e63b14da50fdc85ba803f1dafe7b3fed0a0cfb123398231540a864d9db1424f5c6ecd2d9054f02203cd8f6fa783debced32e52baab0c5304d4b77ca3aae09e440a26d3631f86ec1706140611d7a8b43c3fcc8d6b058927c64852f914e0a45c23cef89c757ec4bba624c69a360623e300e4557ba4b2d0561f1e6b7e22be88d64b6b049eece5badd7535a0a84371fe489247731f2884eb5796bc0ade827cad9732d7f0963ef8058228c3d563cccb13224cfcfdca90ce7a28c7bc872ba8431d9fbd3f262721b74ed6501d1ccceff2c7b661223cb53a27bcae6c1a8731acf5118625506063345c94eb080e400ca69f8f8db0729975227162b4ded9b077bf4856973c6918e853086b1ec125bae5f579752467cfa25796b57e91ce5ca301ec8202c37e25e81a2983ef700faef07e57bfcf6a65c836d795f6c5e6141aae76b1cf043b43b12972adbb3011e56fdeb50830c280095d0857227eae773304b0b32ec456fcc9fb40ac81346676702b5d9f3c5a1eda36459496ded6e8b59327443ea2a5a55d253f900041d810244b12b1131172b2ffef064e2e83f73765502a5c0a0501c4318444d594337347e8a63f43c391d9c18b82b09f9fb65759de1dc56f1396fa36c3bf7e598cdd2c174ff0254a2f3aff987fc26d4fad325200afa43de259fc1d3220cf860772ffdff4e9acebfd7fee3cd9aad7b05617d64399d1e040c4abe71e2c421d8431e90f01066a47055227962091ef82ff56b294a4ea289e8f7cb944ff51254b10a9f83d3fa754897c1db968785796c66dbadf328dcbfe5fc5f0a2bcdea35ec7fa85195e311eefa586da773bca6f9ac5ecf3411d9a64bf446e71f7d235af1c3af0da6682929ccace8ac06bc75ee582725fcaf9c740c64b1cdf9520743b0d44717a69ed307d164cccc59dc85b97aa5a34a3e2f435a69d526af26158476246c8cb937333ddfa2a0f61814876448006a2e7dd4e146f3d0adc078f305e85c72ab7fe2ab3e13eef1f55038156e536d54d9dee5da547e404d5193564933b52099e8a962b9bdc1587654c6251babeb475abd2a1329beb2c39be80d3cda768a557d6b3f13e1b0068c940db49a82db0d2513aa6aaebe2930ebcd05ae938cad0dd55f2048d7107b5ce2a91ead7c8da01607de25cd8de9a86993fa2d1d61799a6915d57b4579252d7bd70fe4d80110295193fe07fbbfcdc7c6cf4589714a3a33e02733879e1af641399bf1f797446d9976a71110551ff85bb9ec770812f5e78e59e21ebbd7f9b6f6d01dbbd2f2b9222bcbbf8dc3adb99530f805b71976ce9a4b2d4371358ac018d356bbd12186eb3fca0071b8435714889ae79f95077c3a759bee739bb0cb6cc2548badb755b8f8badf83b49bccbdce37755101c991069ad56b57a948b7d1de13c9ef416759a8818b4543239ec5284a51b8e938493156a229ce1c6acd53305cb4b64c50a2f2e605729aa99a4d95b4f5493cc853fa12d13206257370f5f4b5ca4da4e1ea4a22f72df84d2edeeebf3256f38d7d86b2a923604bd935f0d1a18487485644c1c6a5bec6c5d0526cd58876788efc860a28075105f05578da6406033783b65d06b90c1a1a6209b02c4ac45a7239fa2bdaf11bd9e6d577b6d9e4dbbc8a224bae17c966bde586b59791f6d71a8ba67e767503b9c754e6d21910c0ca0eb41a19645fef48cd81715ea239582e4a3430d4cc9baf15616ecd1d18df554478584d075527b158ed26473cedc3bdb22f3da399bdea60b1db63a1a2ad1bd7345e64da7607c9c17a7a232ecf15514f23b50fb3dcea994624354adb7eab09bde788b7c15698f2ae2c7f6d1663cf657ebafd4ea6a81672d88e4afe1a3578d9719d5cebc51cadea3d2e9258b37d206765f86fd73304ecf9d7b857bef8abd791420846cf1275c676cfd3cc02b53bd7af4465edf50493bf97750585c26bf9a9705c86734428e9b2e941c33f797be9831cfdf6bc3a9e7b5bf00c45c6514d1e64896bc421df0e3186ec11daec5feb542bcab67fbdd8dc7002476d71e83433a436a64a63bc20d55e3ce656875dec98169225fb3c0f570fcbf98fc373235b99f9d4493a98aa9c652c7da21fbabcb94dfa1bc133db201940e5612406c9998194fda3413d547e3010140a2f6faacdd383c7e1f9b847497f10720bdde2213042df3d379058ace25ceb9b0fda2f788c349b425167b9f2ac21f8685d4679a588a0bf79abf4f210bf73f4bfadc90d2743478116e81f19fdffe32aafd227a20399090f67f8968bc459574868d81c8c98bc3d832df07096b86e582cfcfe7e94d26d41181a6798fa87fc22c2df8ee8318f12d5c5ed7620c6f4ed14a33a18412df0a600d190805931051e9483e8fcfe0493e8fca6a9b9867cbf5bba761f52863c65ec38d4fab3a42f21495ff12364df02f006fc34921400a16978bad578de66138a851e2069eafdc98750775078dcd658d2ab98f61cb210975fd2dc659c3c2d12eae34dcc89f552ae0de95f6d4798b71a1f6cc2e62b0dc8141e727b8ce8d6ceccc2b5e4125d24dfd035c9db0fc32391e775d5fdc91b4ebf1c597ce4072d42b27f10a5305fc2441588f4330f11eac2802669f2ee61fb9c56bc2c3c5e49e524cf8deed708a97faa8f08e0fca4d26eeb9399c90b19283386fd1dc2794ca367ed1fba937e3a1162caa8a14591c7fb03571c4d0d034aedfcd79736e5e04dbc407924ca9080e0015a27e6f08579cf8ebaab0f7284105050829156603918946e77b2b7f0b7297e</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>视频嵌入</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode自动更新</title>
    <url>/2023/07/07/vscode%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1><span id="论如何设置vscode自动更新">论如何设置vscode自动更新</span></h1><h2><span id="-打开vscode设置界面搜索框内输入-auto-save">- 打开VSCode设置界面,搜索框内输入 auto save</span></h2><p><img src="/2023/07/07/vscode%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/image.png" alt="Alt text"></p>
<ul>
<li>afterDelay将在配置的 <code>files.autoSaveDelay</code> 后自动保存为保存的编辑器</li>
<li>onFocusChange —— 当编辑器失去焦点时，将自动保存为保存的编辑器也就是鼠标不在VSCode里面时自动保存</li>
<li>onWindowChange —— 当窗口失去焦点时，将自动保存为保存的编辑器（窗口可理解为每个代码脚本，当鼠标从 A 脚本转到 B 脚本时，自动保存脚本 A 的修改内容）</li>
</ul>
<p><del>最后：这里我用的是onWindowChange 自己喜欢哪个就用哪个！！！</del></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>一张图片</title>
    <url>/2023/07/07/%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1><span id="hello">hello</span></h1><h1><span id="图片">图片</span></h1><p><a href="01.png">图片</a></p>
<h2><span id="这是图片">这是图片</span></h2><p><img src="/2023/07/07/%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%89%87/01.png" alt="picture"></p>
<h1><span id="图表">图表</span></h1><div style="width: 80%;margin: 0 auto">
    <canvas id="chart9249" style="height: 300px"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
<script type="text/javascript">
    var ctx = document.getElementById('chart9249').getContext('2d');
    var options = {
    type: 'line',
    data: {
        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
        datasets: [{
            label: 'My First dataset',
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: [0, 10, 5, 2, 20, 30, 45]
        }]
    },
    options: {
        responsive: true,
        title: {
            display: true,
            text: 'Chart.js Line Chart'
        }
    }
};;
    new Chart(ctx, options);
</script>



<p><a href="googlea0e607549e412fbf.html">谷歌验证</a><br>googlea0e607549e412fbf.html</p>
]]></content>
      <categories>
        <category>无</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>live2d</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/07/07/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>github+hexo+yarn+插件免费搭建个人博客教程</title>
    <url>/2023/07/07/%E5%9F%BA%E6%9C%AC%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1><span id="目录">目录</span></h1><!-- toc -->

<ul>
<li><a href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">准备工作</a></li>
<li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%AD%A5%E9%AA%A4">命令行步骤</a></li>
<li><a href="#%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98">安装主题</a></li>
<li><a href="#%E6%B3%A8%E5%86%8Cgitee%E6%88%96github">注册gitee或github</a></li>
<li><a href="#github-%E4%B8%8Ehexo%E9%85%8D%E7%BD%AE">github 与hexo配置</a></li>
<li><a href="#%E5%86%99%E4%B8%80%E4%B8%AAbat%E5%91%BD%E4%BB%A4%E7%94%A8%E4%BA%8E%E8%BF%90%E8%A1%8C%E5%86%99%E5%A5%BD%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E4%B8%8D%E5%86%99">写一个bat命令用于运行写好的博客(可以不写)</a></li>
<li><a href="#%E5%BF%85%E5%A4%87%E6%8F%92%E4%BB%B6">必备插件</a><ul>
<li><a href="#1hexo-generator-searchdbhttpsgithubcomtheme-nexthexo-generator-searchdb-%E6%90%9C%E7%B4%A2">1.<a href="https://github.com/theme-next/hexo-generator-searchdb">hexo-generator-searchdb</a> 搜索</a></li>
<li><a href="#2hexo-generator-index-pin-tophttpsgithubcomnetcanhexo-generator-index-pin-top">2.<a href="https://github.com/netcan/hexo-generator-index-pin-top">hexo-generator-index-pin-top</a></a></li>
</ul>
</li>
<li><a href="#%E5%85%B6%E4%BB%96%E9%A1%B5%E9%9D%A2">其他页面</a><ul>
<li><a href="#%E5%88%86%E7%B1%BB">分类</a></li>
<li><a href="#%E6%A0%87%E7%AD%BE">标签</a></li>
<li><a href="#%E7%9B%B8%E5%86%8C">相册</a></li>
<li><a href="#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">文章目录</a><ul>
<li><a href="#%E8%A1%A5%E5%85%85">补充</a></li>
</ul>
</li>
<li><a href="#%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5">友情链接</a></li>
</ul>
</li>
<li><a href="#%E5%8F%AF%E9%80%89%E6%8F%92%E4%BB%B6">可选插件</a><ul>
<li><a href="#gitalkhttpsgithubcomgitalkgitalkblobmasterreadme-cnmd">gitalk</a></li>
</ul>
</li>
<li><a href="#hexo-blog-encrypt%E5%8D%9A%E5%AE%A2%E5%8A%A0%E5%AF%86">hexo-blog-encrypt(博客加密)</a></li>
<li><a href="#hexo-helper-live2d">hexo-helper-live2d</a><ul>
<li><a href="#%E8%BF%9B%E9%98%B6">进阶</a></li>
</ul>
</li>
<li><a href="#%E9%97%AE%E9%A2%98%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8">问题:本地图片引用</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%8D%9A%E5%AE%A2%E6%8F%90%E7%A4%BA%E8%AF%8D">修改新建文件(博客)提示词</a></li>
<li><a href="#%E7%94%A8vscode%E5%86%99markdown">用vscode写markdown</a><ul>
<li><a href="#%E7%94%A8vscode%E5%86%99markdown%E5%BF%85%E5%A4%87%E6%8F%92%E4%BB%B6">用vscode写markdown必备插件：</a></li>
<li><a href="#markdown">markdown</a></li>
</ul>
</li>
<li><a href="#yare-%E4%B8%BB%E9%A2%98">yare 主题</a></li>
<li><a href="#%E6%96%87%E7%AB%A0%E5%A4%AA%E9%95%BF%E6%80%8E%E4%B9%88%E5%8A%9E">文章太长怎么办?</a><ul>
<li><a href="#%E6%B7%BB%E5%8A%A0%E8%BF%99%E4%B8%AA%E5%8D%B3%E5%8F%AF">添加这个即可</a></li>
</ul>
</li>
<li><a href="#%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E6%88%96%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F">新建文件夹或文件格式</a></li>
<li><a href="#hexo%E5%A4%9A%E5%B9%B3%E5%8F%B0%E5%90%8C%E6%AD%A5">hexo多平台同步</a><ul>
<li><a href="#git-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C">Git 基本操作</a></li>
</ul>
</li>
<li><a href="#ayer">ayer</a><ul>
<li><a href="#%E5%9F%BA%E6%9C%AC%E6%8F%92%E4%BB%B6">基本插件</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->

<h1><span id="准备工作">准备工作</span></h1><p>安装GIT 和 node.js<br>安装HExo</p>
<h1><span id="命令行步骤">命令行步骤</span></h1><pre><code>npm install hexo-cli -g
hexo init blog
cd blog
npm install
hexo server 或者 hexo s
</code></pre>
<p>出现博客地址 打开</p>
<h1><span id="安装主题">安装主题</span></h1><pre><code>git clone https://gitee.com/mirrors/ayer.git themes/ayer
</code></pre>
<p>修改config文件 <code>theme: ayer</code></p>
<pre><code>hexo g -s
</code></pre>
<p>修改主题配置文件之前一定要复制一份(防止出错) </p>
<span id="more"></span>
<h1><span id="注册gitee或github">注册gitee或github</span></h1><p><del>(这里以github为例)</del><br>首先 新建仓库为 zh3g.github.io</p>
<h1><span id="github-与hexo配置">github 与hexo配置</span></h1><pre><code>git config --global user.name &quot;zh3g&quot;
git config --global user.email &quot;zhang1zhengzheng@outlook.com&quot;

ssh-keygen -t rsa -C &quot;zhang1zhengzheng@outlook.com&quot;
(输入三次回车

cat ~/.ssh/id_rsa.pub
</code></pre>
<p>复制显示的密钥到ssh公钥</p>
<pre><code>ssh -T git@github.com
</code></pre>
<p> 找到config文件<br> 最后输入<br>例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repository: git@github.com:zh3g/zh3g.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<h1><span id="写一个bat命令用于运行写好的博客可以不写">写一个bat命令用于运行写好的博客(可以不写)</span></h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Echo start cmd /c &quot;hexo clean&amp;&amp;hexo g&amp;&amp;hexo d &quot;   </span><br><span class="line"></span><br><span class="line">@Echo Off</span><br><span class="line"></span><br><span class="line">Echo 请选择 Y. 启动三件套            N. 退出</span><br><span class="line">Echo.</span><br><span class="line">Set /p var=请选择:</span><br><span class="line">If /i %var%==Y (start cmd /k &quot;hexo clean&amp;&amp;hexo g&amp;&amp;hexo d &quot;) else (Exit)</span><br><span class="line">Pause</span><br><span class="line">%0 </span><br></pre></td></tr></table></figure>

<h1><span id="必备插件">必备插件</span></h1><h2><span id="1hexo-generator-searchdb-搜索">1. 搜索</span></h2><p>1 <code>npm install hexo-generator-searchdb --save</code></p>
<p>然后将以下配置复制到你博客根目录下的 _config.yml 里（注意不是ayer目录下的）:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>

<h2><span id="2hexo-generator-index-pin-top">2.</span></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>
<p>在需要的页面顶部输入<code>top: true</code></p>
<h1><span id="其他页面">其他页面</span></h1><h2><span id="分类">分类</span></h2><p><code>hexo new page categories</code><br>然后将以下复制到_posts&#x2F;categories&#x2F;index.md文件</p>
<pre><code>---
title: categories
type: &quot;categories&quot;
layout: &quot;categories&quot;
---
</code></pre>
<h2><span id="标签">标签</span></h2><p><code>hexo new page tags</code><br>配置同分类一样</p>
<pre><code>---
title: tags
type: &quot;tags&quot;
layout: &quot;tags&quot;
---
</code></pre>
<h2><span id="相册">相册</span></h2><p><code>hexo new page photos</code><br>然后将以下复制到 <code>/source/photos/index.md</code> 文件， <code>img_url</code> 替换成图片路径， <code>caption</code> 替换成图片名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Gallery</span><br><span class="line"></span><br><span class="line">albums: [</span><br><span class="line">        [&quot;img_url&quot;,&quot;img_caption&quot;],</span><br><span class="line">        [&quot;img_url&quot;,&quot;img_caption&quot;]</span><br><span class="line">        ]</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p><del>实际不起作用</del></p>
<h2><span id="文章目录">文章目录</span></h2><p>用Tocbot解析文章标题并生成目录</p>
<p>将以下配置复制到你ayer目录下的 _config.yml 里：</p>
<pre><code># Toc
 toc: true
</code></pre>
<p>当然你可能并不想所有文章都生成悬浮目录，你可以在文章顶部的配置中加一行来进行关闭：</p>
<pre><code>---
toc: false
---
</code></pre>
<h3><span id="补充">补充</span></h3><p><del>hexo安装toc插件</del><br><del>一、安装(这里是hexo的路径下，也就是博客根目录下)</del><br><del><code>cnpm install hexo-toc --save</code></del><br><del>二、配置博客根目录下的_config.yml文件：</del></p>
<p><del>toc:</del><br>  <del>maxdepth: 3</del></p>
<p><del>三、在markdown里使用 在Markdown中需要显示文章目录的地方添加</del></p>
<h2><span id="友情链接">友情链接</span></h2><p><code>hexo new page friends</code><br>然后将以下复制到 <code>/source/friends/index.md </code>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: friends</span><br><span class="line">type: friends</span><br><span class="line">layout: &quot;friends&quot;</span><br><span class="line">---    </span><br></pre></td></tr></table></figure>
<p>然后在 ayer 主题目录下的 _config.yml 中自定义 friends_link 配置项即可</p>
<h1><span id="可选插件">可选插件</span></h1><h2><span id="gitalk"></span></h2><p><a href="https://www.cnblogs.com/qisi007/p/13731562.html">配置gitalk</a><br>首先进入主题的配置文件_config.yml(注意是主题的配置文件，不是博客根目录下的配置文件)，添加gitalk配置(一定要仔细，缺一不可)。</p>
<pre><code>gitalk:
enable: true 开启gitalk评论，不需要配置
owner: github用户名
admin: github用户名
repo: 博客的仓库名称(注意不是地址)
ClientID: 上面生成的Client ID
ClientSecret: 上面生成的Client Secret
labels: &#39;gitalk&#39; github issue 对应的issue标签（新建一个）
distractionFreeMode: true  无干扰模式，不需要更改
</code></pre>
<p>例如</p>
<pre><code>gitalk:
enable: true #开启gitalk评论，不需要配置
owner: zh3g
admin: zh3g
repo: zh3g.github.io
ClientID: d186f3f35180f1d7ea10
ClientSecret: 4e853408d31eaf16451af58d490d816a8ed985a5
labels: &#39;gitalk&#39; #github issue 对应的issue标签（新建一个）
distractionFreeMode: true  #无干扰模式，不需要更改
</code></pre>
<p>随后修好主题里的config文件确保gitalk为<code>true</code><br>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 2、Gitalk(https://github.com/gitalk/gitalk)</span><br><span class="line">gitalk:</span><br><span class="line">  enable: true # true</span><br><span class="line">  clientID: d186f3f35180f1d7ea10 # GitHub Application Client ID</span><br><span class="line">  clientSecret: 4e853408d31eaf16451af58d490d816a8ed985a5 # Client Secret</span><br><span class="line">  repo: zh3g.github.io # Repository name</span><br><span class="line">  owner: zh3g # GitHub ID</span><br><span class="line">  admin: zh3g # GitHub ID</span><br></pre></td></tr></table></figure>
<h1><span id="hexo-blog-encrypt博客加密">hexo-blog-encrypt(博客加密)</span></h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2016-03-30 21:18:02</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">hello</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<h1><span id="hexo-helper-live2d">hexo-helper-live2d</span></h1><p><a href="https://blog.csdn.net/wang_123_zy/article/details/87181892#_10">helper-live2d</a></p>
<h2><span id="进阶">进阶</span></h2><h1><span id="问题本地图片引用">问题:本地图片引用</span></h1><p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image -- save</span><br></pre></td></tr></table></figure>
<p>将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code><br>在文档需要插图片的地方</p>
(实测不行)
<p>改为 <code>![图片](图片名)</code><br><del>hexo修改文章路径</del><br><del>hexo默认文章路径为年&#x2F;月&#x2F;日&#x2F;文件名，目录层次过长不利于收录，所以在根目录的config.yml文件中，修改默认路径</del><br><del>permalink:</del> <del>:year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</del><br><del>为</del><br><del>permalink:</del> <del>archives&#x2F;:title.html</del><br>千万别改(改完图片就失效了30min摸索的经验)</p>
<h1><span id="修改新建文件博客提示词">修改新建文件(博客)提示词</span></h1><p><del><a href="https://zhuanlan.zhihu.com/p/384471848">参考</a></del><br><del>不适用于yare主题,现无解</del><br>更新:scaffolds文件夹直接修改即可</p>
<h1><span id="用vscode写markdown">用vscode写markdown</span></h1><h2><span id="用vscode写markdown必备插件">用vscode写markdown必备插件：</span></h2><ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">Markdown All in One</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image">Paste Image</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker">Code Spell Checker</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced">Markdown Preview Enhanced</a></li>
</ul>
<h2><span id="markdown">markdown</span></h2><p><a href="https://markdown.com.cn/basic-syntax">官方教程</a></p>
<h1><span id="yare-主题">yare 主题</span></h1><ul>
<li><a href="https://easyhexo.com/2-Theme-use-and-config/2-19-hexo-theme-ayer/#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">主题配置</a></li>
<li><a href="https://shen-yu.gitee.io/2019/ayer/">Ayer中文说明</a></li>
</ul>
<h1><span id="文章太长怎么办">文章太长怎么办?</span></h1><h2><span id="添加这个即可">添加这个即可</span></h2><p><code>&lt;!--more--&gt;</code></p>
<h1><span id="新建文件夹或文件格式">新建文件夹或文件格式</span></h1><h1><span id="hexo多平台同步">hexo多平台同步</span></h1><p>参考:<a href="https://www.zhihu.com/question/21193762/answer/489124966">知乎 直上云霄 【使用hexo，如果换了电脑怎么更新博客？】问题回答</a></p>
<h2><span id="git-基本操作">Git 基本操作</span></h2><p> <a href="https://www.runoob.com/git/git-basic-operations.html">git</a><br> <img src="/2023/07/07/%E5%9F%BA%E6%9C%AC%E6%95%99%E7%A8%8B/002.png" alt="Alt text"></p>
<h1><span id="ayer">ayer</span></h1><p><a href="https://easyhexo.com/2-Theme-use-and-config/2-19-hexo-theme-ayer/#%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE">作者介绍</a></p>
<h2><span id="基本插件">基本插件</span></h2><p> <img src="/2023/07/07/%E5%9F%BA%E6%9C%AC%E6%95%99%E7%A8%8B/001.png" alt="插件"></p>
]]></content>
      <categories>
        <category>个人</category>
      </categories>
      <tags>
        <tag>-hexo -vscode</tag>
      </tags>
  </entry>
</search>
